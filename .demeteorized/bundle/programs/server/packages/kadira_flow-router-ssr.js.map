{"version":3,"sources":["meteor://ðŸ’»app/packages/kadira:flow-router-ssr/lib/router.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/lib/group.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/lib/route.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/lib/_init.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/server/router.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/server/group.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/server/route.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/server/ssr_context.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/server/_init.js","meteor://ðŸ’»app/packages/kadira:flow-router-ssr/server/plugins/ssr_data.js"],"names":["Qs","module","import","v","PathToRegexp","SharedRouter","_routes","_routesMap","_onRouteCallbacks","env","trailingSlash","Meteor","EnvironmentVariable","route","pathDef","options","group","test","message","Error","currentRoute","Route","_init","push","name","_triggerRouteRegister","path","fields","queryParams","newPath","_basePath","_encodeValues","toPath","compile","replace","match","get","_","last","strQueryParams","stringify","go","watchPathChange","Group","url","completePath","basePath","pathWithoutBase","RegExp","absoluteUrl","current","context","clone","_getCurrentRouteContext","EJSON","params","onRouteRegister","cb","obj","newObj","Object","keys","forEach","value","key","encodeURIComponent","routePublicApi","pick","omittingOptionFields","omit","withTrailingSlash","fn","withValue","SharedGroup","router","parent","prefix","_router","SharedRoute","_action","action","Function","prototype","FlowRouter","Router","subscriptions","ssrContext","inSubscription","routeContext","deferScriptLoading","pageCacheTimeout","triggers","enter","exit","getParam","getQueryParam","getRouteName","setDeferScriptLoading","defer","setPageCacheTimeout","timeout","Url","require","Cheerio","logger","console","_cache","cookieParser","Picker","middleware","FastRender","handleOnAllRoutes","_handleRoute","bind","req","res","next","_isHtmlPage","__userId","userId","cachedPage","_getCachedPage","_processFromCache","processFromSsr","_processFromSsr","handleRoute","pageInfo","originalWrite","write","call","html","InjectData","pushData","frData","self","SsrContext","_buildContext","getData","addData","collectionData","ex","error","stack","_injectHtml","data","head","getHead","trim","body","getHtml","_moveScriptsToBottom","_cachePage","$","load","decodeEntities","heads","append","_params","query","_serverRequest","pathname","parse","ext","split","slice","join","cacheInfo","cacheKey","_getCacheKey","info","existingInfo","timeoutHandle","setTimeout","deepMerge","_html","_head","_collections","getCollection","collName","collection","minimongo","Package","LocalCollection","setHtml","addToHead","headHtml","addSubscription","fastRenderContext","frContext","args","concat","subscribe","each","collDataCollection","collectionName","collData","item","existingDoc","findOne","_id","newDoc","update","insert","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","originalSubscribe","pubName","Array","arguments","apply","ready","Mongo","mongo","originalFind","Collection","find","selector","_name","cursor","limit","fetch","originalAutorun","Tracker","autorun","c","firstRun","stop","methodName","original","response","loggingIn"],"mappings":"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","file":"/packages/kadira_flow-router-ssr.js","sourcesContent":["import Qs from 'qs';\nimport PathToRegexp from 'path-to-regexp';\n\nSharedRouter = class {\n  constructor() {\n    this._routes = [];\n    this._routesMap = {};\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.env = {};\n    this.env.trailingSlash = new Meteor.EnvironmentVariable();\n  }\n\n  route(pathDef, options, group) {\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    options = options || {};\n\n    const currentRoute = new Route(this, pathDef, options, group);\n    currentRoute._init();\n\n    this._routes.push(currentRoute);\n\n\n    if (options.name) {\n      this._routesMap[options.name] = currentRoute;\n    }\n\n    this._triggerRouteRegister(currentRoute);\n\n    return currentRoute;\n  }\n\n  // XXX this function needs to be cleaned up if possible by removing `if (this.isServer)`\n  // and `if (this.isClient)` if possible\n  path(pathDef, fields = {}, queryParams = {}) {\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let newPath = '';\n\n    // Prefix the path with the router global prefix\n    if (this._basePath) {\n      newPath += `/${this._basePath}/`;\n    }\n\n    // Encode query params\n    queryParams = this._encodeValues(queryParams);\n\n    const toPath = PathToRegexp.compile(pathDef);\n    newPath += toPath(fields);\n\n    // If we have one optional parameter in path definition e.g.\n    // /:category?\n    // and the parameter isn't present, path will be an empty string.\n    // We have this check as a value for path is required by e.g. FlowRouter.go()\n    if (!newPath) {\n      newPath = '/';\n    }\n\n    // Replace multiple slashes with single slash\n    newPath = newPath.replace(/\\/\\/+/g, '/');\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    newPath = newPath.match(/^\\/{1}$/) ? newPath : newPath.replace(/\\/$/, '');\n\n    // explictly asked to add a trailing slash\n    if (this.env.trailingSlash.get() && _.last(newPath) !== '/') {\n      newPath += '/';\n    }\n\n    const strQueryParams = Qs.stringify(queryParams || {});\n\n    if (strQueryParams) {\n      newPath += `?${strQueryParams}`;\n    }\n\n    return newPath;\n  }\n\n  go() {\n    // client only\n  }\n\n  watchPathChange() {\n    // client only\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  url(...args) {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    const completePath = this.path(...args);\n    const basePath = this._basePath || '/';\n    const pathWithoutBase = completePath.replace(RegExp(`^${basePath}`), '');\n    return Meteor.absoluteUrl(pathWithoutBase);\n  }\n\n  // For client:\n  // .current is not reactive on the client\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n  current() {\n    // We can't trust outside, that's why we clone this\n    // Anyway, we can't clone the whole object since it has non-jsonable values\n    // That's why we clone what's really needed.\n    const context = _.clone(this._getCurrentRouteContext());\n\n    context.queryParams = EJSON.clone(context.queryParams);\n    context.params = EJSON.clone(context.params);\n\n    return context;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _encodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? encodeURIComponent(value) : value;\n    });\n\n    return newObj;\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n    const omittingOptionFields = [\n      'triggersEnter', 'triggersExit', 'name', 'action'\n    ];\n    routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);\n\n    this._onRouteCallbacks.forEach((cb) => {\n      cb(routePublicApi);\n    });\n  }\n\n  _getCurrentRouteContext() {\n    throw new Error('Not implemented');\n  }\n\n  _init() {\n    throw new Error('Not implemented');\n  }\n\n  withTrailingSlash(fn) {\n    return this.env.trailingSlash.withValue(true, fn);\n  }\n};\n","SharedGroup = class {\n  constructor(router, options, parent) {\n    options = options || {};\n\n    if (options.prefix && !/^\\/.*/.test(options.prefix)) {\n      const message = \"group's prefix must start with '/'\";\n      throw new Error(message);\n    }\n\n    this.prefix = options.prefix || '';\n    this.options = options;\n    this._router = router;\n    this.parent = parent;\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    pathDef = this.prefix + pathDef;\n\n    group = group || this;\n\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    return new Group(this._router, options, this);\n  }\n};\n","SharedRoute = class {\n  constructor(router, pathDef, options, group) {\n    options = options || {};\n\n    this.options = options;\n\n    this.name = options.name;\n\n    this.pathDef = pathDef;\n\n    // Route.path is deprecated and will be removed in 3.0\n    this.path = this.pathDef;\n\n    this._router = router;\n\n    this._action = options.action || Function.prototype;\n\n    this.group = group;\n  }\n};\n","// Export Router Instance\nFlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\n","Router = class extends SharedRouter {\n  constructor() {\n    super();\n\n    this.subscriptions = Function.prototype;\n    this.ssrContext = new Meteor.EnvironmentVariable();\n    this.inSubscription = new Meteor.EnvironmentVariable();\n    this.routeContext = new Meteor.EnvironmentVariable();\n\n    // FlowRouter can defer the script loading after rendered the body\n    // It's turned off by default\n    this.deferScriptLoading = false;\n\n    // FlowRouter can cache it's pages to improve SSR performance.\n    // It's turned off by default\n    this.pageCacheTimeout = 0;\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.triggers = {\n      enter: function() {\n        // client only\n      },\n      exit: function() {\n        // client only\n      }\n    };\n  }\n\n  getParam(key) {\n    const current = this.current();\n    if (current) {\n      return current.params[key];\n    }\n  }\n\n  getQueryParam(key) {\n    const current = this.current();\n    if (current) {\n      return current.queryParams[key];\n    }\n  }\n\n  getRouteName() {\n    const current = this.current();\n    if (current) {\n      return current.route.name;\n    }\n  }\n\n  setDeferScriptLoading(defer) {\n    this.deferScriptLoading = defer;\n  }\n\n  setPageCacheTimeout(timeout) {\n    this.pageCacheTimeout = timeout;\n  }\n\n  _getCurrentRouteContext() {\n    return this.routeContext.get();\n  }\n};\n","Group = class extends SharedGroup {\n};\n","const Url = require('url');\nconst Cheerio = require('cheerio');\nconst logger = console;\n\nRoute = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n\n    this._cache = {};\n  }\n\n  _init() {\n    const cookieParser = require('cookie-parser');\n    Picker.middleware(cookieParser());\n    // process null subscriptions with FR support\n    Picker.middleware(FastRender.handleOnAllRoutes);\n\n    const route = FlowRouter.basePath + this.pathDef;\n    Picker.route(route, this._handleRoute.bind(this));\n  }\n\n  _handleRoute(params, req, res, next) {\n    if (!this._isHtmlPage(req.url)) {\n      return next();\n    }\n\n    // This userId will be useful in the at the later on when\n    // it's time to cache the page.\n    // Normally, we can't access `Meteor.userId()` outside of a method\n    // But here, we could do it because we call `FastRender.handleOnAllRoutes`.\n    // It creates a FastRender context and assign it for the current fiber.\n    req.__userId = Meteor.userId();\n    const cachedPage = this._getCachedPage(req.url, req.__userId);\n    if (cachedPage) {\n      return this._processFromCache(cachedPage, res, next);\n    }\n\n    // Here we need to processFromSsr,\n    // but also we need to process with FastRender as well.\n    // That's why we bind processFromSsr and pass args as below.\n    // It does not get any arguments from FastRender.\n    // FastRender just trigger the following handler and do it's job\n    const processFromSsr = this._processFromSsr.bind(this, params, req, res);\n    FastRender.handleRoute(processFromSsr, params, req, res, next);\n  }\n\n  _processFromCache(pageInfo, res, next) {\n    // Here we can't simply call res.write.\n    // That's because, the HTML we've cached does not have the\n    // injected fast-render data.\n    // That's why we hijack the res.write and let FastRender to push\n    // the frData we've cached.\n    const originalWrite = res.write;\n    res.write = function() {\n      originalWrite.call(this, pageInfo.html);\n    };\n    InjectData.pushData(res, 'fast-render-data', pageInfo.frData);\n    next();\n  }\n\n  _processFromSsr(params, req, res) {\n    const self = this;\n    const ssrContext = new SsrContext();\n    const routeContext = self._buildContext(req, params);\n\n    self._router.ssrContext.withValue(ssrContext, () => {\n      self._router.routeContext.withValue(routeContext, () => {\n        try {\n          // get the data for null subscriptions and add them to the\n          // ssrContext\n          const frData = InjectData.getData(res, 'fast-render-data');\n          if (frData) {\n            ssrContext.addData(frData.collectionData);\n          }\n\n          if (self.options.action) {\n            self.options.action(routeContext.params, routeContext.queryParams);\n          }\n        } catch (ex) {\n          logger.error(`Error when doing SSR. path:${req.url}: ${ex.message}`);\n          logger.error(ex.stack);\n        }\n      });\n\n      self._injectHtml(req, res, ssrContext);\n    });\n  }\n\n  _injectHtml(req, res, ssrContext) {\n    const self = this;\n    const originalWrite = res.write;\n    res.write = function(data) {\n      if (typeof data === 'string') {\n        const head = ssrContext.getHead();\n        if (head && head.trim() !== '') {\n          data = data.replace('</head>', `${head}\\n</head>`);\n        }\n\n        const body = ssrContext.getHtml();\n        data = data.replace('<body>', `<body>\\n${body}`);\n\n        if (self._router.deferScriptLoading) {\n          data = self._moveScriptsToBottom(data);\n        }\n\n        // cache the page if mentioned a timeout\n        if (self._router.pageCacheTimeout) {\n          const pageInfo = {\n            frData: InjectData.getData(res, 'fast-render-data'),\n            html: data\n          };\n          self._cachePage(req.url, req.__userId, pageInfo, self._router.pageCacheTimeout);\n        }\n      }\n\n      originalWrite.call(this, data);\n    };\n  }\n\n  _moveScriptsToBottom(html) {\n    const $ = Cheerio.load(html, {\n      decodeEntities: false\n    });\n    const heads = $('head script');\n    $('body').append(heads);\n\n    // Remove empty lines caused by removing scripts\n    $('head').html($('head').html().replace(/(^[ \\t]*\\n)/gm, ''));\n\n    return $.html();\n  }\n\n  _buildContext(req, _params) {\n    const queryParams = _params.query;\n    // We need to remove `.query` since it's not part of our params API\n    // But we only need to remove it in our copy.\n    // We should not trigger any side effects\n    const params = _.clone(_params);\n    delete params.query;\n\n    const context = {\n      route: this,\n      path: req.url,\n      params,\n      queryParams,\n      // We might change this later on. That's why it's starting with _\n      _serverRequest: req\n    };\n\n    return context;\n  }\n\n  _isHtmlPage(url) {\n    const pathname = Url.parse(url).pathname;\n    const ext = pathname.split('.').slice(1).join('.');\n\n    // if there is no extention, yes that's a html page\n    if (!ext) {\n      return true;\n    }\n\n    // if this is htm or html, yes that's a html page\n    if (/^htm/.test(ext)) {\n      return true;\n    }\n\n    // if not we assume this is not as a html page\n    // this doesn't do any harm. But no SSR\n    return false;\n  }\n\n  _getCachedPage(url, userId) {\n    const cacheInfo = {url, userId};\n    const cacheKey = this._getCacheKey(cacheInfo);\n    const info = this._cache[cacheKey];\n    if (info) {\n      return info.data;\n    }\n  }\n\n  _cachePage(url, userId, data, timeout) {\n    const cacheInfo = {url, userId};\n    const cacheKey = this._getCacheKey(cacheInfo);\n    const existingInfo = this._cache[cacheKey];\n    if (existingInfo) {\n      // Sometimes, it's possible get this called multiple times\n      // due to race conditions. So, in that case, simply discard\n      // caching this page.\n      return;\n    }\n\n    const info = {\n      data: data,\n      timeoutHandle: setTimeout(() => {\n        delete this._cache[cacheKey];\n      }, timeout)\n    };\n\n    this._cache[cacheKey] = info;\n  }\n\n  _getCacheKey({userId = '', url}) {\n    return `${userId}::${url}`;\n  }\n};\n","const deepMerge = require('deepmerge');\n\nSsrContext = class {\n  constructor() {\n    this._html = '';\n    this._head = '';\n    this._collections = {};\n  }\n\n  getCollection(collName) {\n    let collection = this._collections[collName];\n    if (!collection) {\n      const minimongo = Package.minimongo;\n      collection = this._collections[collName] = new minimongo.LocalCollection();\n    }\n\n    return collection;\n  }\n\n  setHtml(html) {\n    this._html = html;\n  }\n\n  getHtml() {\n    return this._html;\n  }\n\n  addToHead(headHtml) {\n    this._head += `\\n${headHtml}`;\n  }\n\n  getHead() {\n    return this._head;\n  }\n\n  addSubscription(name, params) {\n    const fastRenderContext = FastRender.frContext.get();\n    if (!fastRenderContext) {\n      throw new Error(\n        `Cannot add a subscription: ${name} without FastRender Context`\n      );\n    }\n\n    const args = [name].concat(params);\n    const data = fastRenderContext.subscribe(...args);\n    this.addData(data);\n  }\n\n  addData(data) {\n    _.each(data, (collDataCollection, collectionName) => {\n      const collection = this.getCollection(collectionName);\n      collDataCollection.forEach((collData) => {\n        collData.forEach((item) => {\n          const existingDoc = collection.findOne(item._id);\n          if (existingDoc) {\n            const newDoc = deepMerge(existingDoc, item);\n            delete newDoc._id;\n            collection.update(item._id, newDoc);\n          } else {\n            collection.insert(item);\n          }\n        });\n      });\n    });\n  }\n};\n","// This is a magic configuration in Meteor which allows some apps to be\n// run with a prefix.\n// This is very important when especially app running in something like\n// sandstrom.io\n// Now it's supported by SSR using this\nFlowRouter.basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n","const originalSubscribe = Meteor.subscribe;\n\nMeteor.subscribe = function(pubName) {\n  const params = Array.prototype.slice.call(arguments, 1);\n\n  const ssrContext = FlowRouter.ssrContext.get();\n  if (ssrContext) {\n    FlowRouter.inSubscription.withValue(true, () => {\n      ssrContext.addSubscription(pubName, params);\n    });\n  }\n\n  if (originalSubscribe) {\n    originalSubscribe.apply(this, arguments);\n  }\n\n  return {\n    ready: () => true\n  };\n};\n\nconst Mongo = Package.mongo.Mongo;\nconst originalFind = Mongo.Collection.prototype.find;\n\nMongo.Collection.prototype.find = function(selector, options) {\n  selector = selector || {};\n  const ssrContext = FlowRouter.ssrContext.get();\n  if (ssrContext && !FlowRouter.inSubscription.get()) {\n    const collName = this._name;\n    const collection = ssrContext.getCollection(collName);\n    const cursor = collection.find(selector, options);\n    return cursor;\n  }\n\n  return originalFind.call(this, selector, options);\n};\n\n// We must implement this. Otherwise, it'll call the origin prototype's\n// find method\nMongo.Collection.prototype.findOne = function(selector, options) {\n  options = options || {};\n  options.limit = 1;\n  return this.find(selector, options).fetch()[0];\n};\n\nconst originalAutorun = Tracker.autorun;\n\nTracker.autorun = (fn) => {\n  // if autorun is in the ssrContext, we need fake and run the callback\n  // in the same eventloop\n  if (FlowRouter.ssrContext.get()) {\n    const c = { firstRun: true, stop: () => {} };\n    fn(c);\n    return c;\n  }\n\n  return originalAutorun.call(Tracker, fn);\n};\n\n// By default, Meteor[call,apply] also inherit SsrContext\n// So, they can't access the full MongoDB dataset because of that\n// Then, we need to remove the SsrContext within Method calls\n['call', 'apply'].forEach((methodName) => {\n  const original = Meteor[methodName];\n  Meteor[methodName] = (...args) => {\n    const response = FlowRouter.ssrContext.withValue(null, () => {\n      return original.apply(this, args);\n    });\n\n    return response;\n  };\n});\n\n// This is not available in the server. But to make it work with SSR\n// We need to have it.\nMeteor.loggingIn = () => {\n  return false;\n};\n"]}